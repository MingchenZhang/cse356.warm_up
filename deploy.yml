---
- hosts: project2
#  serial: 1
  become: yes
  become_method: sudo
  vars:
    project_name: cse356.warm_up
    http_port: 80
    DB_PORT: 27017
    systemd_config_nodejs: |
        [Unit]
        Description=simple nodejs server

        [Service]
        User=root
        Group=root
        WorkingDirectory=/var/node/{{project_name}}/
        Environment=HTTP_PORT=80
        Environment=DB_PATH=mongodb://localhost:{{DB_PORT}}/
        Environment=PERF_TEST=true
        Environment=USER_DB_PATH=mongodb://192.168.1.64:27017/
        Environment=TWEET_DB_PATH=mongodb://localhost:27017/
        Environment=LOG_DB_PATH=mongodb://192.168.1.70:27017/
        Environment=MEDIA_DB_PATH=mongodb://192.168.1.130:27017/
        Environment=USER_CONN_MEMCACHE=192.168.1.64:11211
        Environment=TWEET_CONN_MEMCACHE=192.168.1.67:11211
        Environment=SKIP_ADD_TWEET_WAIT=true
        Environment=LIST_CACHE=192.168.1.22:5004
        ExecStart=/usr/bin/node app.js

        [Install]
        WantedBy=multi-user.target
  
  gather_facts: no
  pre_tasks:
  - name: install python2
    raw: sudo apt-get update && sudo apt-get -y install python-simplejson

  tasks:
#  - name: ensure git is installed
#    apt:
#      name: git
#      update_cache: yes
  - name: ensure systemd is installed
    apt:
      name: systemd

  - name: install nodejs
    apt:
      name: build-essential
      update_cache: yes

  - name: check nodejs
    shell: dpkg-query -W 'nodejs'
    ignore_errors: True
    register: has_nodejs
  - include: install_nodejs.yml
    when: has_nodejs|failed

  - name: check mongodb server
    shell: dpkg-query -W 'mongodb-org-server'
    ignore_errors: True
    register: has_mongodb_server
  - include: install_mongodb_server.yml
    when: has_mongodb_server|failed

  - name: stop privious mongos instance
    command: pkill mongos -e
    ignore_errors: True

  - name: start config mongos instance
    shell: nohup mongos --configdb shardConfig/192.168.1.111:4001 &
    async: 10
    poll: 0
  
  - name: create folder for website resources
    file: 
      path: /var/node/{{project_name}}/
      state: directory
      recurse: yes
  - name: archive all file in git
    local_action: shell git archive HEAD > archive.tar.gz
    become: false
  - name: unarchive files
    unarchive:
      src: archive.tar.gz
      dest: /var/node/{{project_name}}/
      
  - name: create folder for mongodb
    file:
      path: /var/mongodb/{{project_name}}
      state: directory

  - name: Install packages based on package.json.
    npm:
      path: /var/node/{{project_name}}/

  - name: write systemd config to auto run nodejs
    copy:
      content: "{{ systemd_config_nodejs }}"
      dest: /etc/systemd/system/simple_nodejs_server.service
  - name: enable the service
    command: systemctl enable simple_nodejs_server.service
  
#  - name: write systemd config to auto run mongodb
#    copy:
#      content: "{{ systemd_config_mongodb }}"
#      dest: /etc/systemd/system/simple_mongodb_server.service
#  - name: enable the service
#    command: systemctl enable simple_mongodb_server.service
  
  - name: start the nodejs service
    command: systemctl restart simple_nodejs_server.service
  
#  - name: pause 5 seconds
#    pause:
#      seconds: 5
#
#
#  - name: get nodejs status
#    command: systemctl status simple_nodejs_server.service -n30
#    register: node_status
#  - debug: msg="{{ node_status.stdout }}"
#  - debug: msg="{{ node_status.stderr }}"